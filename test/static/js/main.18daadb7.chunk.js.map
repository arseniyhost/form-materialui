{"version":3,"sources":["hooks/hookStyles.js","common/utils.js","validate/validate.js","common/ButtonBox.js","common/ButtonIconBox.js","Component/ListArrays/ListArrays.js","Component/FormList/ModalPop/ModalPop.js","redux/formDataReducer.js","Component/ModalForm/ModalForm.js","Component/FormList/FormList.js","App.js","serviceWorker.js","redux/redux-store.js","index.js","Component/ModalForm/ModalForm.module.css","common/utils.module.css"],"names":["useStyles","makeStyles","theme","createStyles","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","renderInput","label","input","meta","touched","error","hasError","className","style","Input","placeholder","type","renderSelect","FormControl","Select","p","MenuItem","map","c","value","key","require","values","ButtonBox","disabled","color","onClick","text","variant","Box","Button","ButtonIconBox","size","id","IconButton","max","length","maxLengthSymbols","ListElementArrays","fields","ing","Container","Grid","justify","container","direction","item","xs","Field","validate","component","name","remove","btnPush","push","ModalPop","classes","modelActive","offModelActive","handleSubmit","Modal","open","Fade","in","onSubmit","fontSize","fontWeight","head","FieldArray","btnSave","GET_FORM_DATA","initState","formData","formDataReducer","state","action","dataForm","ListFormRedux","reduxForm","form","onModelActive","connect","formInfo","getFormData","props","useState","setModelActive","list","console","log","App","Boolean","window","location","hostname","match","reducers","combineReducers","formReducer","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.18daadb7.chunk.js","sourcesContent":["import { makeStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        modal: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        paper: {\r\n            backgroundColor: theme.palette.background.paper,\r\n\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n    }),\r\n);","import React from 'react';\r\nimport Input from '@material-ui/core/Input';\r\nimport { FormControl, Select, MenuItem } from '@material-ui/core';\r\nimport style from './utils.module.css';\r\n\r\n\r\nexport const renderInput = ({ label, input, meta: { touched, error } }) => {\r\n    let hasError = touched && error;\r\n\r\n    return <div className={hasError ? style.error : \"\"}>\r\n        <Input\r\n            label={label}\r\n            placeholder={label}\r\n            {...input}\r\n            type=\"number\"\r\n        />\r\n        {touched && error && <span className={style.error}>{error}</span>}\r\n    </div>\r\n}\r\n\r\n\r\nexport const renderSelect = ({ input, meta: { touched, error } }) => {\r\n    let hasError = touched && error;\r\n    let color = ['red', 'green', 'blue', 'yellow', 'grey', 'white', 'orange'];\r\n    return <div className={hasError ? style.error : \"\"}>\r\n        <FormControl>\r\n            <Select p={2}\r\n                {...input}\r\n            >\r\n                <MenuItem>Выберите</MenuItem>\r\n                {\r\n                    color.map(c => {\r\n                        return <MenuItem value={c} key={c}>{c}</MenuItem>\r\n                    })\r\n                }\r\n            </Select>\r\n            {touched && error && <span className={style.error}>{error}</span>}\r\n\r\n        </FormControl>\r\n    </div>\r\n}","export const require = (values) => {\r\n    if (values) return undefined;\r\n\r\n    return 'required';\r\n}\r\n\r\nexport const maxLengthSymbols = (max) => (values) => {\r\n    if (values && values.length > max) return `maximum is ${max}`;\r\n\r\n    return undefined\r\n}","import React from 'react';\r\nimport { Box, Button } from '@material-ui/core';\r\n\r\nconst ButtonBox = ({ disabled, type, color, onClick, className, text, variant }) => (\r\n    <Box p={2}>\r\n        <Button variant={variant} disabled={disabled}\r\n            type={type} color={color}\r\n            onClick={onClick} className={className}\r\n        >{text}</Button>\r\n    </Box>\r\n)\r\n\r\nexport default ButtonBox;","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst ButtonIconBox = ({ color, onClick, size, id }) => (\r\n    <Box>\r\n        <IconButton\r\n            id={id}\r\n            color={color}\r\n            size={size}\r\n            onClick={onClick}>\r\n            <CloseIcon />\r\n        </IconButton>\r\n    </Box>\r\n)\r\n\r\nexport default ButtonIconBox;","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport style from './../ModalForm/ModalForm.module.css';\r\nimport { renderInput, renderSelect } from '../../common/utils';\r\nimport { Grid } from '@material-ui/core';\r\nimport { require, maxLengthSymbols } from './../../validate/validate';\r\nimport ButtonBox from '../../common/ButtonBox';\r\nimport ButtonIconBox from '../../common/ButtonIconBox';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nlet max = maxLengthSymbols(4);\r\n\r\nconst ListElementArrays = ({ fields }) => {\r\n\r\n\r\n    return (\r\n        <ul>\r\n            {fields.map((ing, id) => {\r\n                return <Container key={ing}>\r\n                    <Grid justify={\"space-between\"} spacing={1} container direction=\"row\" >\r\n                        <Grid item xs={4}>\r\n                            <Field validate={[require]} component={renderSelect} name={ing + \"colors\"} />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <Field validate={[require, max]}\r\n                                name={ing + \"number\"}\r\n                                type=\"number\"\r\n                                component={renderInput}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <ButtonIconBox color={\"secondary\"} size={\"small\"} onClick={() => fields.remove(id)} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            })}\r\n            <li>\r\n                <ButtonBox color=\"primary\"\r\n                    disabled={fields.length + 1 > 5 ? true : false}\r\n                    className={style.btnPush}\r\n                    type={\"button\"}\r\n                    onClick={() => fields.push()}\r\n                    text={\"Добавить\"}\r\n                />\r\n\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ListElementArrays;","import React from 'react';\r\nimport { FieldArray } from 'redux-form';\r\nimport style from './../../ModalForm/ModalForm.module.css';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport ListElementArrays from './../../ListArrays/ListArrays';\r\nimport Box from '@material-ui/core/Box';\r\nimport ButtonBox from '../../../common/ButtonBox';\r\nimport { Grid } from '@material-ui/core';\r\nimport ButtonIconBox from '../../../common/ButtonIconBox';\r\n\r\n\r\nconst ModalPop = ({ classes, modelActive, offModelActive, handleSubmit }) => {\r\n\r\n    return (\r\n        <Modal className={classes.modal} open={modelActive}>\r\n            <Fade in={modelActive}>\r\n                <form onSubmit={handleSubmit} className={style.modal}>\r\n                    <Box p={2} fontSize={24} fontWeight=\"fontWeightMedium\" className={style.head}>\r\n                        Структура номера\r\n                        <ButtonIconBox id={\"btnClose\"} color={\"inherit\"} onClick={offModelActive} />\r\n                    </Box>\r\n                    <Grid xs={12} container>\r\n                        <FieldArray name=\"list\" component={ListElementArrays} />\r\n                    </Grid>\r\n                    <Grid container direction=\"row\">\r\n                        <ButtonBox xs={3} variant={\"contained\"} color={\"primary\"} type={\"submit\"} id={style.btnSave} text={\"Сохранить\"} />\r\n                        <ButtonBox xs={3} onClick={offModelActive} text={\"Отмена\"} />\r\n                    </Grid>\r\n                </form>\r\n            </Fade>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ModalPop;","const GET_FORM_DATA = 'state/formData/GET_FORM_DATA';\r\n\r\nlet initState = {\r\n    formData: null\r\n}\r\n\r\nconst formDataReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case GET_FORM_DATA: {\r\n            return {\r\n                ...state, formData: action.dataForm\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport const getFormData = (dataForm) => ({ type: GET_FORM_DATA, dataForm });\r\n\r\nexport default formDataReducer;","import React, { useState } from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useStyles } from '../../hooks/hookStyles';\r\nimport { FormList } from '../FormList/FormList';\r\nimport { getFormData } from './../../redux/formDataReducer';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst ModalForm = (props) => {\r\n    const classes = useStyles();\r\n    const [modelActive, setModelActive] = useState(false);\r\n\r\n\r\n    const onModelActive = () => {\r\n        setModelActive(true);\r\n    }\r\n\r\n    const offModelActive = () => {\r\n        setModelActive(false);\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        if (!formData || !formData.list) {\r\n            return\r\n        }\r\n\r\n        else {\r\n            if (formData.list.length === 0 || !formData.list) {\r\n                return\r\n            }\r\n            else {\r\n                props.getFormData(formData.list);\r\n                setModelActive(false);\r\n                console.log(formData);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <ListFormRedux classes={classes} onSubmit={onSubmit} onModelActive={onModelActive} offModelActive={offModelActive} modelActive={modelActive} />\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst ListFormRedux = reduxForm({\r\n    form: \"test\"\r\n})(FormList);\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        formInfo: state.form\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { getFormData })(ModalForm);\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport ModalPop from './ModalPop/ModalPop';\r\n\r\nexport const FormList = ({ offModelActive, onModelActive, modelActive, handleSubmit, classes }) => {\r\n    return (\r\n        <div className=\"container\">\r\n            <Box>\r\n                <Button p={2} fontSize={22} variant=\"contained\" color=\"primary\" onClick={onModelActive}>Open</Button>\r\n                <ModalPop classes={classes} modelActive={modelActive} offModelActive={offModelActive} handleSubmit={handleSubmit} />\r\n            </Box>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport ModalForm from './Component/ModalForm/ModalForm';\n\nconst App = () => {\n  return (\n    <div>\n      <ModalForm />\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, combineReducers} from 'redux';\r\nimport { reducer as formReducer} from 'redux-form';\r\nimport formDataReducer from './formDataReducer';\r\n\r\nlet reducers = combineReducers({\r\n    form: formReducer,\r\n    formData: formDataReducer \r\n});\r\n\r\n\r\nlet store = createStore(reducers);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux-store';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"ModalForm_modal__3aB4F\",\"btnIcon\":\"ModalForm_btnIcon__3knoi\",\"head\":\"ModalForm_head__1TGjz\",\"grid\":\"ModalForm_grid__1G4CX\",\"btnPush\":\"ModalForm_btnPush__19GJb\",\"btnSave\":\"ModalForm_btnSave__3NPjo\",\"btnClose\":\"ModalForm_btnClose__8jGgi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"utils_error__3a8Ds\"};"],"sourceRoot":""}